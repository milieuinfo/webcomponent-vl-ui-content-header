
/**
 * Private Variables
 */
const pswpClass = 'pswp',
  pswpBGClass = 'pswp__bg',
  pswpScrollClass = 'pswp__scroll-wrap',
  pswpContainerClass = 'pswp__container',
  pswpItemClass = 'pswp__item',
  pswpUIClass = 'pswp__ui',
  pswpUIHiddenClass = 'pswp__ui--hidden',
  pswpTopBarClass = 'pswp__top-bar',
  pswpCounterClass = 'pswp__counter',
  pswpButtonClass = 'pswp__button',
  pswpButtonCloseClass = 'pswp__button--close',
  pswpButtonZoomClass = 'pswp__button--zoom',
  pswpPreloaderClass = 'pswp__preloader',
  pswpPreloaderIconClass = 'pswp__preloader__icn',
  pswpPreloaderCutClass = 'pswp__preloader__cut',
  pswpPreloaderDonutClass = 'pswp__preloader__donut',
  pswpShareModalClass = 'pswp__share-modal',
  pswpShareModalHiddenClass = 'pswp__share-modal--hidden',
  pswpSingleTapClass = 'pswp__single-tap',
  pswpShareTooltipClass = 'pswp__share-tooltip',
  pswpButtonLeftClass = 'pswp__button--arrow--left',
  pswpButtonRightClass = 'pswp__button--arrow--right',
  pswpCaptionClass = 'pswp__caption',
  pswpCaptionCenterClass = 'pswp__caption__center',
  body = document.getElementsByTagName('body')[0];

class GenerateGallery {
  constructor() {
    // pswp
    const pswp = document.createElement('div');

    vl.util.addClass(pswp, pswpClass);
    pswp.setAttribute('tabindex', '-1');
    pswp.setAttribute('role', 'dialog');
    pswp.setAttribute('aria-hidden', 'true');
    body.appendChild(pswp);

    // BG
    const bg = document.createElement('div');

    vl.util.addClass(bg, pswpBGClass);
    pswp.appendChild(bg);

    // Scroll wrap
    const scrollwrap = document.createElement('div');

    vl.util.addClass(scrollwrap, pswpScrollClass);
    pswp.appendChild(scrollwrap);

    // Container
    const container = document.createElement('div');

    vl.util.addClass(container, pswpContainerClass);
    scrollwrap.appendChild(container);

    // Item
    const item = document.createElement('div');

    vl.util.addClass(item, pswpItemClass);

    const item2 = item.cloneNode(true);
    const item3 = item.cloneNode(true);

    container.appendChild(item);
    container.appendChild(item2);
    container.appendChild(item3);

    // UI
    const ui = document.createElement('div');

    vl.util.addClass(ui, pswpUIClass);
    vl.util.addClass(ui, pswpUIHiddenClass);
    scrollwrap.appendChild(ui);

    // Top bar
    const topbar = document.createElement('div');

    vl.util.addClass(topbar, pswpTopBarClass);
    ui.appendChild(topbar);

    // Counter
    const counter = document.createElement('div');

    vl.util.addClass(counter, pswpCounterClass);
    topbar.appendChild(counter);

    // Close button
    const closeButton = document.createElement('button');
    const closeButtonAlt = document.createElement('span');

    closeButton.setAttribute('type', 'button');
    closeButtonAlt.setAttribute('class', `${vl.ns}u-visually-hidden`);
    closeButtonAlt.innerHTML = vl.i18n.t('lightbox.close');
    vl.util.addClass(closeButton, pswpButtonClass);
    vl.util.addClass(closeButton, pswpButtonCloseClass);
    topbar.appendChild(closeButton);
    closeButton.appendChild(closeButtonAlt);

    // Zoom button
    const zoomButton = document.createElement('button');
    const zoomButtonAlt = document.createElement('span');

    zoomButton.setAttribute('type', 'button');
    zoomButtonAlt.setAttribute('class', `${vl.ns}u-visually-hidden`);
    zoomButtonAlt.innerHTML = vl.i18n.t('lightbox.zoom_in_out');
    vl.util.addClass(zoomButton, pswpButtonClass);
    vl.util.addClass(zoomButton, pswpButtonZoomClass);
    topbar.appendChild(zoomButton);
    zoomButton.appendChild(zoomButtonAlt);

    // Preloader
    const preloader = document.createElement('div');

    vl.util.addClass(preloader, pswpPreloaderClass);
    topbar.appendChild(preloader);

    const preloaderIcon = document.createElement('div');

    vl.util.addClass(preloaderIcon, pswpPreloaderIconClass);
    preloader.appendChild(preloaderIcon);

    const preloaderCut = document.createElement('div');

    vl.util.addClass(preloaderCut, pswpPreloaderCutClass);
    preloaderIcon.appendChild(preloaderCut);

    const preloaderDonut = document.createElement('div');

    vl.util.addClass(preloaderDonut, pswpPreloaderDonutClass);
    preloaderCut.appendChild(preloaderDonut);

    // Share modal
    const shareModal = document.createElement('div');

    vl.util.addClass(shareModal, pswpShareModalClass);
    vl.util.addClass(shareModal, pswpShareModalHiddenClass);
    vl.util.addClass(shareModal, pswpSingleTapClass);
    ui.appendChild(shareModal);

    const shareTooltip = document.createElement('div');

    vl.util.addClass(shareTooltip, pswpShareTooltipClass);
    shareModal.appendChild(shareTooltip);

    // left button
    const leftButton = document.createElement('button');
    const leftButtonAlt = document.createElement('span');

    leftButton.setAttribute('type', 'button');
    leftButtonAlt.setAttribute('class', `${vl.ns}u-visually-hidden`);
    leftButtonAlt.innerHTML = vl.i18n.t('lightbox.prev_slide');
    vl.util.addClass(leftButton, pswpButtonClass);
    vl.util.addClass(leftButton, pswpButtonLeftClass);
    ui.appendChild(leftButton);
    leftButton.appendChild(leftButtonAlt);

    // right button
    const rightButton = document.createElement('button');
    const rightButtonAlt = document.createElement('span');

    rightButton.setAttribute('type', 'button');
    rightButtonAlt.setAttribute('class', `${vl.ns}u-visually-hidden`);
    rightButtonAlt.innerHTML = vl.i18n.t('lightbox.next_slide');
    vl.util.addClass(rightButton, pswpButtonClass);
    vl.util.addClass(rightButton, pswpButtonRightClass);
    ui.appendChild(rightButton);
    rightButton.appendChild(rightButtonAlt);

    // Caption
    const caption = document.createElement('div');

    vl.util.addClass(caption, pswpCaptionClass);
    ui.appendChild(caption);

    const captionCenter = document.createElement('div');

    vl.util.addClass(captionCenter, pswpCaptionCenterClass);
    caption.appendChild(captionCenter);

    return pswp;
  }
}

export default GenerateGallery;
